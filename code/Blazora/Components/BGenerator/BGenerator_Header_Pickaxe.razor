@inherits BGenerator_Component
@using BlazorApp.Shared.Models
@using NS_Manager_Resource
@using NS_Game_Engine
@using Blazora.Script

@code {

    
}

@{ 
    display_name ();
}



<!-- Source -->

@for (int i = 0; i < this.recipe.get_component_count (); i++)
{
    Resource_Stack component_stack = this.recipe.mix_component.list_resource_stack[i];

    int stock_quantity = Game_Engine.self.manager_resource.from_resource_name_get_resource_quantity (component_stack.resource_name);

    <Cellicon picture_filename=@(Resource.from_resource_name_get_resource_filename (component_stack.resource_name))
                position=@(new Position (s * 0, s * i, s, s))
                text_bottom_right=@("inf")
                />

}

<!-- Pickaxe -->

@{ 
    Resource_Stack stack_tool = get_stack_tool ();
}


<!-- Line 1 -->

    <Cellicon picture_filename=@(Resource.from_resource_name_get_resource_filename (stack_tool.resource_name))
                position=@(new Position (s * 5, s * (this.recipe.get_component_count () - 1), s, s))
                />


@if (Game_Engine.self.manager_toggle.is_true ("know_burner_drill") == true)
{
    <Cellicon picture_filename=@(Resource.from_resource_name_get_resource_filename ("burner_drill"))
                position=@(new Position (s * 6, s * (this.recipe.get_component_count () - 1), s, s))
                text_middle_right="^"
                action=@(() => Game_Action.upgrade_tool (this.generator_id, "burner_drill"))
                />
}



@code{
    
    protected override void OnInitialized ()
    {
        this.id = $"BGenerator_Header_Pickaxe [{get_result_resource_name ()}]";
        base.OnInitialized ();
    }

}