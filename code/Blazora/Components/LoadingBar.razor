@inherits Game_Component

<style>
    .progressbar_container
    {
        position: relative;
        background-color: lightgrey;
        border: 1px solid black;
    }

    .progressbar_content
    {
        position: absolute;
        top: 0px;
        left: 0px;
        background-color: forestgreen;
    }
</style>

<div class="progressbar_container" style="
    position: absolute;
    @(position != null ? $"left: {position.x}px" : "");
    @(position != null ? $"top: {position.y}px" : "");
    @(position != null ? $"width: {position.width}px" : "");
    @(position != null ? $"height: {position.height}px" : "");
    ">

    <div class="progressbar_content" style="
        height: @(this.position.height-2)px;
        width: @(get_content_width())px;">


    </div>

</div>



@code {

    [Parameter] public int val_max { get; set; } = 100;
    [Parameter] public Func<int> val_func { get; set; }

    public int get_content_width ()
    {
        int val_current = this.val_func ();

        int val = val_current;
        if (val < 0)
        {
            val = 0;
        }
        else if (val > this.val_max)
        {
            val = this.val_max;
        }

        float percentage = val_current / (float)this.val_max;

        float content_width_original = percentage * (this.position.width - 1);
        content_width_original = (float)Math.Ceiling (content_width_original);
        if (content_width_original > this.position.width - 1)
        {
            content_width_original = this.position.width - 1;
        }
        int content_width = (int)content_width_original;

        return content_width;
    }


    public override void listener_setup ()
    {
        base.listener_setup ();
        listener_add (this.val_func);
    }


}
