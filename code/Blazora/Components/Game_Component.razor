@implements IDisposable

@code {

    List<KeyValuePair<Func<int>, int>> list_kvp_func_val = new List<KeyValuePair<Func<int>, int>> ();


    protected override void OnInitialized()
    {
        base.OnInitialized ();
        listener_setup ();
        Blazora.Pages.Game_Page.graphical_action += graphical_update;
    }



    public bool need_refresh = true;
    public virtual void graphical_update ()
    {
        listener_update ();

        if (this.need_refresh == false)
        {
            return;
        }

        StateHasChanged ();
        this.need_refresh = false;
    }


    public virtual void listener_setup ()
    {

    }

    public void listener_add (Func<int> func)
    {
        list_kvp_func_val.Add (new KeyValuePair<Func<int>, int> (func, 0));
    }

    public void listener_update ()
    {
        for (int i=0; i<this.list_kvp_func_val.Count; i++)
        {
            KeyValuePair<Func<int>, int> kvp_func_val = list_kvp_func_val[i];

            Func<int> func = kvp_func_val.Key;
            int func_val = func ();
            int val = kvp_func_val.Value;
            if (func_val != val)
            {
                list_kvp_func_val[i] = new KeyValuePair<Func<int>, int> (func, func_val);
                this.need_refresh = true;
            }
        }
    }



    public void Dispose()
    {
        Blazora.Pages.Game_Page.graphical_action -= graphical_update;
    }
}
