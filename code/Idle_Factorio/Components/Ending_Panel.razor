@inherits Game_Component

@using System.Collections.Generic
@using NS_Game_Engine
@using NS_Manager_Resource
@using Idle_Factorio.Script
@using Pages



@code {
    List<(string, string)> list_name_val;

}

@{ 
    if (Game_Stat.self != null)
    {
        set_val ();
    }
}

@if (this.list_name_val == null)
{
    <span>wait...</span>
}
else
{
    <style>
        #panel_end td:nth-child(2)
        {
            width: 120px;
        }
    </style>

    <div id="panel_end" style="
        background-color: #BBFF9E;
        border: 1px solid black;
        padding: 16px;
        width: 324px;
        ">
    <div style="font-size: 30px; text-align: center;">
        YOU WON!
    </div>
    <div style="font-size: 25px; text-align: center;">
        Thank you for playing!
    </div>

    <div style="margin-top: 20px;">
    <table>
        @foreach ((string, string) name_val in this.list_name_val)
        {
            <tr><td style="text-align: right;">@(@name_val.Item1)</td><td>&nbsp;&nbsp;&nbsp;@((MarkupString)name_val.Item2)</td>
            </tr>
        }


    </table>
    </div>
    </div>
}
@code{

    public override void listener_setup ()
    {
        base.listener_setup ();
        listener_add ("Ending_Panel refresh", Game_Page.self.clock_second);
    }


    protected override async Task OnInitializedAsync ()
    {
        await base.OnInitializedAsync ();

        while (Game_Stat.self == null)
        {
            StateHasChanged ();
            await Task.Delay (1000);
        }

        set_val ();
    }



    public void set_val ()
    {
        if (Game_Stat.self.ContainsKey ("time_played_endgame") == false)
        {
            Game_Stat.self.Add ("time_played_endgame", Game_Stat.self["time_played"]);
        }

        list_name_val = new List<(string, string)> ();

        list_name_val.Add (("Time to win", string.Format ("{0:%h}h {0:%m}m {0:%s}s", 
            TimeSpan.FromSeconds (Game_Stat.self["time_played_endgame"]))));
        list_name_val.Add (("Total Time Played", string.Format ("{0:%h}h {0:%m}m {0:%s}s", 
            TimeSpan.FromSeconds (Game_Stat.self["time_played"]))));

        foreach (string resource_name in Resource.get_list_resource_name_craftable ())
        {
            string img = $"<img style=\"width:16px;height:16px;\" src=\"images/{Resource.from_resource_name_get_resource_filename (resource_name)}\" />";
            list_name_val.Add
                ((
                $"{Resource.from_resource_name_to_resource_name_readable (resource_name)} crafted",
                $"{img} {Game_Stat.self[resource_name]}"
                ));
        }
    }

}